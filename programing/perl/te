#!/usr/bin/bash
./test.pl -t $1 > te.json 
while true; do
  cat te.json \
  | jq '.member
  | 
    (
    ([
      paths 
      | if .[length -1 ] == "Name" 
        then
          ( . | reduce .[] as $item 
          ([]; (. | length) as $len | 
            if $item == "member" then 
                if ($len ) > 0 then 
                  .[0:($len - 1 )] + [ (.[ ($len - 1) ] + ["Name"]) ]
                else 
                  [ ["Name"] ]
                end 
                + 
                if ($len) > 0 then
                   [ .[ ($len - 1) ] + [$item] ]
                else
                  [ [$item] ]
                end
            else
              if ($len) > 0 then
                .[0:($len - 1 )] +  [ (.[ ($len - 1) ] + [$item]) ]
              else
                [ [$item] ]
              end
            end
            )
          )
        else 
          empty 
        end
    ]) | to_entries)[] as $paths
    | [ 
        getpath( $paths.value[] )
        , " " + 
        ( [ 
          $paths.value[] | [ .[] | 
          if type == "string" 
          then  
            sub("Name"; "type")  
          else . end
          ]
        ] 
        ) as $tpath |
          getpath( $tpath[ ($tpath | length) - 1 ] )
        , " " + 
        ( [ 
          $paths.value[] | [ .[] | 
          if type == "string" 
          then  
            sub("Name"; "line")  
          else . end
          ]
        ] 
        ) as $tpath |
          getpath( $tpath[ ($tpath | length) - 1 ] ) 
      ] 
    | reduce .[] as $name (""; . + "/" + $name)
        
  '\
  | sed 's/"//g' | sed 's/\/ /\t/g' \
  | awk '{ printf "%s|%s|%s\n", $1, $3, $2 }' \
  | column -t -s '|' \
  | tree --noreport --fromfile | fzf --reverse \
  | sed 's/[^A-Za-z0-9_-]*/ /' \
  | awk '{print $2}' | awk -F'-' '{printf "%s,%sp\n", $1, $2}' \
  | ed -s $1 > tmp.lua 
    [ -s tmp.lua ] \
    && \
    bat --wrap never --theme gruvbox-dark --pager "less -SR" --tabs 2 tmp.lua \
    || break 
done
\rm tmp.lua
\rm te.json
